{"pageProps":{"articlesDetail":{"year":"2022","month":"07","folder":"../md/2022-07-ret-cra-to-vite","slug":"2022-07-ret-cra-to-vite","mdxSource":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    a: \"a\",\n    h2: \"h2\",\n    ul: \"ul\",\n    li: \"li\",\n    h3: \"h3\",\n    code: \"code\",\n    pre: \"pre\",\n    span: \"span\",\n    blockquote: \"blockquote\",\n    em: \"em\",\n    strong: \"strong\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      children: \"Post-review: Migrating CRA to Vite\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"0000-00-tag-react\",\n        children: \"Tag: React\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Previous state\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Create-react-app application takes around 3 minutes to build, requiring around 3GB of RAM.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Why Vite\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"We wanted a quick frictionless migration (so picking a framework like Next is out of scope);\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"We wanted to avoid low level tools. We want something well-mantained with a good preset out of the box;\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"It looks like Vite achieved these goals, other similar tooling might have too;\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Migration tweaks\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"This might change a bit depending on what kind of stuff you have in your project. Here's what we had:\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Initial setup\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"Vite's docs doesn't have any article about \\\"migrating from an existing project\\\"; So I have launched a starter project and copied the following files:\", \"\\n\", _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: _jsx(_components.code, {\n              children: \"vite.config.ts\"\n            })\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.code, {\n              children: \"tsconfig.json\"\n            }), \" (adapt accordingly)\"]\n          }), \"\\n\", _jsx(_components.li, {\n            children: _jsx(_components.code, {\n              children: \"tsconfig.node.json\"\n            })\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Review the \", _jsx(_components.code, {\n          children: \"package.json\"\n        }), \" and remove anything related to Create React App, Babel or Webpack. For instance:\", \"\\n\", _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: _jsx(_components.code, {\n              children: \"react-scripts\"\n            })\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Also replace the package.json's scripts accordingly. Ex:\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        children: \"    \\\"vite\\\": \\\"vite\\\",\\n    \\\"start\\\": \\\"vite\\\",\\n    \\\"build\\\": \\\"vite build\\\",\\n    \\\"preview\\\": \\\"vite preview\\\",\\n    \\\"test\\\": \\\"vitest --run\\\",\\n    \\\"test:watch\\\": \\\"vitest\\\",\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"Add Vite (\", _jsx(_components.code, {\n          children: \"yarn add vite\"\n        }), \"). Update TS to the latest version since you don't have CRA locking you to an ancient version anymore;\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"React plugin\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"One of the first things to add is the React plugin in the Vite Config. (\", _jsx(_components.code, {\n        children: \"@vitejs/plugin/react\"\n      }), \").\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Below is shown the final version of the vite config:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-ts\",\n      children: _jsxs(_components.code, {\n        className: \"language-ts\",\n        children: [_jsx(_components.span, {\n          className: \"token comment\",\n          children: \"/// <reference types=\\\"vitest\\\" />\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token keyword module\",\n          children: \"import\"\n        }), \" \", _jsxs(_components.span, {\n          className: \"token imports\",\n          children: [_jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \" defineConfig \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          })]\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword module\",\n          children: \"from\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'vite'\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token keyword module\",\n          children: \"import\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token imports\",\n          children: \"react\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword module\",\n          children: \"from\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'@vitejs/plugin-react'\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token keyword module\",\n          children: \"import\"\n        }), \" \", _jsxs(_components.span, {\n          className: \"token imports\",\n          children: [_jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \" resolve\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" parse \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          })]\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword module\",\n          children: \"from\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'path'\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token keyword module\",\n          children: \"import\"\n        }), \" \", _jsxs(_components.span, {\n          className: \"token imports\",\n          children: [_jsx(_components.span, {\n            className: \"token operator\",\n            children: \"*\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token keyword module\",\n            children: \"as\"\n          }), \" fs\"]\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword module\",\n          children: \"from\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'fs'\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token keyword module\",\n          children: \"import\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token imports\",\n          children: \"svgr\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword module\",\n          children: \"from\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'vite-plugin-svgr'\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"const\"\n        }), \" rootPaths \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" fs\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token method function property-access\",\n          children: \"readdirSync\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'src'\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token method function property-access\",\n          children: \"reduce\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"out\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" item\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token arrow operator\",\n          children: \"=>\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"const\"\n        }), \" parsed \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"parse\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"item\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token keyword control-flow\",\n          children: \"return\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token spread operator\",\n          children: \"...\"\n        }), \"out\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \"parsed\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token property-access\",\n          children: \"name\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"resolve\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'src'\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" item\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// https://vitejs.dev/config/\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token keyword module\",\n          children: \"export\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword module\",\n          children: \"default\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"defineConfig\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n  plugins\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"svgr\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"react\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n  resolve\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n    alias\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" rootPaths\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n  envPrefix\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'REACT_APP'\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n  test\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n    globals\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token boolean\",\n          children: \"true\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n    environment\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'happy-dom'\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Path mapping\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"In CRA, folders at the source root can be acessed as absolute paths.\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"I.e. \", _jsx(_components.code, {\n          children: \"/src/ListComponent/Somefile.ts\"\n        }), \" can be imported as\"]\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"import Somefile from 'ListComponent/Somefile'\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"This special handling doesn't exist on Vite. I have then manually stitched this mapping on vite config's \", _jsx(_components.code, {\n        children: \"resolve.alias\"\n      }), \" setting.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-ts\",\n      children: _jsxs(_components.code, {\n        className: \"language-ts\",\n        children: [_jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"const\"\n        }), \" rootPaths \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" fs\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token method function property-access\",\n          children: \"readdirSync\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'src'\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token method function property-access\",\n          children: \"reduce\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"out\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" item\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token arrow operator\",\n          children: \"=>\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"const\"\n        }), \" parsed \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"parse\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), \"item\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token keyword control-flow\",\n          children: \"return\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token spread operator\",\n          children: \"...\"\n        }), \"out\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \"parsed\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token property-access\",\n          children: \"name\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"resolve\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'src'\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" item\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"token keyword module\",\n          children: \"export\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword module\",\n          children: \"default\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function\",\n          children: \"defineConfig\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// ..\"\n        }), \"\\n  resolve\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n    alias\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" rootPaths\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"SVG Imports\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Create React App embeds the \\\"SVGR\\\" library. If you use any import like...\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-tsx\",\n      children: _jsxs(_components.code, {\n        className: \"language-tsx\",\n        children: [_jsx(_components.span, {\n          className: \"token keyword module\",\n          children: \"import\"\n        }), \" \", _jsxs(_components.span, {\n          className: \"token imports\",\n          children: [_jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token maybe-class-name\",\n            children: \"ReactComponent\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token keyword module\",\n            children: \"as\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token maybe-class-name\",\n            children: \"MySvg\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          })]\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword module\",\n          children: \"from\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"'./file.svg'\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"...then this won't work anymore.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"A frictionless fix was to add the \", _jsx(_components.code, {\n        children: \"vite-plugin-svgr\"\n      }), \" shown above (found in a Stack Overflow reply).\"]\n    }), \"\\n\", _jsxs(_components.blockquote, {\n      children: [\"\\n\", _jsxs(_components.p, {\n        children: [\"Vite is based on Rollup, and SVGR provides its own Rollup plugin, \", _jsx(_components.code, {\n          children: \"@svgr/rollup\"\n        }), \". Unfortunately this seemed not to work properly here because Vite already embeds a static file URL plugin, which takes higher precedence. Even following the provided steps to use it alongside the URL plugin didn't work well.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Environment variables\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Vite doesnt read environment variables from \", _jsx(_components.code, {\n        children: \"process.env\"\n      }), \", but rather from \", _jsx(_components.code, {\n        children: \"import.meta.env\"\n      }), \"; Also, the \", _jsx(_components.code, {\n        children: \"NODE_ENV\"\n      }), \" variable is found on the \", _jsx(_components.code, {\n        children: \"import.meta.env.mode\"\n      }), \", which is set according to the build environment used (Vite dev server, Vite build or vitest);\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Some badly tasting environment variables like \", _jsx(_components.code, {\n        children: \"BROWSER=none\"\n      }), \" or \", _jsx(_components.code, {\n        children: \"PORT\"\n      }), \" won't be needed anymore (Vite's server accepts a \", _jsx(_components.code, {\n        children: \"--port\"\n      }), \" argument like 99% of other software in the world).\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The default environment variable \", _jsx(_components.em, {\n        children: \"safe prefix\"\n      }), \" is \", _jsx(_components.code, {\n        children: \"VITE_APP\"\n      }), \" instead of \", _jsx(_components.code, {\n        children: \"REACT_APP\"\n      }), \". This can be changed on the \", _jsx(_components.code, {\n        children: \"envPrefix\"\n      }), \" setting (as shown above), as to avoid some refactoring.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Type defs\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"If you previously worked on a strictly typed \", _jsx(_components.code, {\n        children: \"process.env\"\n      }), \", you may need to move those types to the corresponding global interfaces \", _jsx(_components.code, {\n        children: \"ImportMetaEnv\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"ImportMeta\"\n      }), \", as shown on the \", _jsx(_components.a, {\n        href: \"https://vitejs.dev/guide/env-and-mode.html#env-files\",\n        children: \"environment variable docs.\"\n      }), \";\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"We also need to replace the build tool types. On react.app-env.d.ts, replace:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-diff\",\n      children: _jsxs(_components.code, {\n        className: \"language-diff\",\n        children: [_jsxs(_components.span, {\n          className: \"token deleted-sign deleted\",\n          children: [_jsx(_components.span, {\n            className: \"token prefix deleted\",\n            children: \"-\"\n          }), _jsx(_components.span, {\n            className: \"token line\",\n            children: \" /// <reference types=\\\"react-scripts\\\" />\\n\"\n          })]\n        }), _jsxs(_components.span, {\n          className: \"token inserted-sign inserted\",\n          children: [_jsx(_components.span, {\n            className: \"token prefix inserted\",\n            children: \"+\"\n          }), _jsx(_components.span, {\n            className: \"token line\",\n            children: \" /// <reference types=\\\"vite/client\\\" />\\n\"\n          })]\n        })]\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"The index.html\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"index.html\"\n      }), \" now lives in the root folder. It also requires a new script tag on its body, pointing to the project root:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-html\",\n      children: _jsxs(_components.code, {\n        className: \"language-html\",\n        children: [\"  \", _jsxs(_components.span, {\n          className: \"token tag\",\n          children: [_jsxs(_components.span, {\n            className: \"token tag\",\n            children: [_jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"<\"\n            }), \"body\"]\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \">\"\n          })]\n        }), \"\\n    \", _jsxs(_components.span, {\n          className: \"token tag\",\n          children: [_jsxs(_components.span, {\n            className: \"token tag\",\n            children: [_jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"<\"\n            }), \"div\"]\n          }), \" \", _jsx(_components.span, {\n            className: \"token attr-name\",\n            children: \"id\"\n          }), _jsxs(_components.span, {\n            className: \"token attr-value\",\n            children: [_jsx(_components.span, {\n              className: \"token punctuation attr-equals\",\n              children: \"=\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"\\\"\"\n            }), \"root\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"\\\"\"\n            })]\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \">\"\n          })]\n        }), _jsxs(_components.span, {\n          className: \"token tag\",\n          children: [_jsxs(_components.span, {\n            className: \"token tag\",\n            children: [_jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"</\"\n            }), \"div\"]\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \">\"\n          })]\n        }), \"\\n    \", _jsxs(_components.span, {\n          className: \"token tag\",\n          children: [_jsxs(_components.span, {\n            className: \"token tag\",\n            children: [_jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"<\"\n            }), \"script\"]\n          }), \" \", _jsx(_components.span, {\n            className: \"token attr-name\",\n            children: \"type\"\n          }), _jsxs(_components.span, {\n            className: \"token attr-value\",\n            children: [_jsx(_components.span, {\n              className: \"token punctuation attr-equals\",\n              children: \"=\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"\\\"\"\n            }), \"module\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"\\\"\"\n            })]\n          }), \" \", _jsx(_components.span, {\n            className: \"token attr-name\",\n            children: \"src\"\n          }), _jsxs(_components.span, {\n            className: \"token attr-value\",\n            children: [_jsx(_components.span, {\n              className: \"token punctuation attr-equals\",\n              children: \"=\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"\\\"\"\n            }), \"/src/index.tsx\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"\\\"\"\n            })]\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \">\"\n          })]\n        }), _jsx(_components.span, {\n          className: \"token script\"\n        }), _jsxs(_components.span, {\n          className: \"token tag\",\n          children: [_jsxs(_components.span, {\n            className: \"token tag\",\n            children: [_jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"</\"\n            }), \"script\"]\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \">\"\n          })]\n        }), \"    \\n  \", _jsxs(_components.span, {\n          className: \"token tag\",\n          children: [_jsxs(_components.span, {\n            className: \"token tag\",\n            children: [_jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"</\"\n            }), \"body\"]\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \">\"\n          })]\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Also, any \", _jsx(_components.code, {\n        children: \"%PUBLIC_URL%\"\n      }), \" tags must be removed.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-html\",\n      children: _jsxs(_components.code, {\n        className: \"language-html\",\n        children: [_jsxs(_components.span, {\n          className: \"token tag\",\n          children: [_jsxs(_components.span, {\n            className: \"token tag\",\n            children: [_jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"<\"\n            }), \"link\"]\n          }), \" \", _jsx(_components.span, {\n            className: \"token attr-name\",\n            children: \"rel\"\n          }), _jsxs(_components.span, {\n            className: \"token attr-value\",\n            children: [_jsx(_components.span, {\n              className: \"token punctuation attr-equals\",\n              children: \"=\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"\\\"\"\n            }), \"icon\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"\\\"\"\n            })]\n          }), \" \", _jsx(_components.span, {\n            className: \"token attr-name\",\n            children: \"href\"\n          }), _jsxs(_components.span, {\n            className: \"token attr-value\",\n            children: [_jsx(_components.span, {\n              className: \"token punctuation attr-equals\",\n              children: \"=\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"\\\"\"\n            }), \"%PUBLIC_URL%/favicon.ico\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"\\\"\"\n            })]\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"/>\"\n          })]\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Refactor sync require()'s\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"On webpack you could still get away with writing a synchronous CommonJS \", _jsx(_components.code, {\n        children: \"require()\"\n      }), \" anywhere. On Vite this simply won't work out (unless maybe with a plugin);\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Default build folder\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The default build folder on Vite is \", _jsx(_components.code, {\n        children: \"dist\"\n      }), \" instead of \", _jsx(_components.code, {\n        children: \"build\"\n      }), \". This can be tweaked with \", _jsx(_components.code, {\n        children: \"build.outDir\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Testing\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The quickest way around testing is probably swithing to \", _jsx(_components.em, {\n        children: \"Vitest\"\n      }), \", as the Jest test runner kinda relies on Babel/Webpack;\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"We still kept Jest on the project, we're just not using its \", _jsx(_components.strong, {\n        children: \"test runner\"\n      }), \" anymore. Other parts of Jest like assertions or mocks are still there.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.em, {\n        children: \"Vitest\"\n      }), \" reads from the same config file (\", _jsx(_components.code, {\n        children: \"vite.config.ts\"\n      }), \"). You need to add its type directive for TS not to complain:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-ts\",\n      children: _jsxs(_components.code, {\n        className: \"language-ts\",\n        children: [_jsx(_components.span, {\n          className: \"token comment\",\n          children: \"// on vite.config.ts:\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token comment\",\n          children: \"/// <reference types=\\\"vitest\\\" />\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"As shown before, we needed a couple extra settings on the \\\"test\\\" key.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        children: \"  test: {\\n    globals: true,\\n    environment: 'happy-dom',\\n  },\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"globals\"\n        }), \" adds the mocha-like globals (\", _jsx(_components.code, {\n          children: \"describe\"\n        }), \", \", _jsx(_components.code, {\n          children: \"test\"\n        }), \", etc) to the context;\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"environment\"\n        }), \" allows you to enable JSDOM or other;\"]\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"When you set an environment, the CLI will suggest you to separately install it.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"ESLint\"\n    }), \"\\n\", _jsxs(_components.blockquote, {\n      children: [\"\\n\", _jsxs(_components.p, {\n        children: [_jsx(_components.strong, {\n          children: \"Update - 08/2022\"\n        }), \": The config set below is harder to set up and not ideal. Instead, install the\\n\", _jsx(_components.code, {\n          children: \"react-app\"\n        }), \" eslint plugin, as described on \", _jsx(_components.a, {\n          href: \"https://www.npmjs.com/package/eslint-config-react-app\",\n          children: \"their docs\"\n        }), \".\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Many ESLint plugins that were previously bundled with CRA had to be manually installed and added.\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"@typescript-eslint/eslint-plugin\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"@typescript-eslint/parser\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"eslint-plugin-jsx-a11y\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"eslint-plugin-react\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"eslint-plugin-react-hooks\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"We ended up with something like this on the  \", _jsx(_components.code, {\n        children: \"eslint.config\"\n      }), \":\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-json\",\n      children: _jsxs(_components.code, {\n        className: \"language-json\",\n        children: [_jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token property\",\n          children: \"\\\"root\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token boolean\",\n          children: \"true\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token property\",\n          children: \"\\\"parser\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"@typescript-eslint/parser\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token property\",\n          children: \"\\\"plugins\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"@typescript-eslint\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"react-hooks\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"jsx-a11y\\\"\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token property\",\n          children: \"\\\"extends\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"[\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"plugin:react/recommended\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"plugin:import/recommended\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"plugin:import/typescript\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"]\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \",\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token property\",\n          children: \"\\\"settings\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token property\",\n          children: \"\\\"react\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n      \", _jsx(_components.span, {\n          className: \"token property\",\n          children: \"\\\"version\\\"\"\n        }), _jsx(_components.span, {\n          className: \"token operator\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token string\",\n          children: \"\\\"17.0\\\"\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Build and development\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The Vite Dev server does not automatically include TS checking. It suggests you to run \", _jsx(_components.code, {\n        children: \"tsc\"\n      }), \" on the build task (\", _jsx(_components.code, {\n        children: \"tsc && vite build\"\n      }), \"). The tsconfig is already suggested with a \", _jsx(_components.code, {\n        children: \"noEmit\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"While you may probably add \", _jsx(_components.code, {\n        children: \"tsc\"\n      }), \" to the build through a plugin, in the end I think it is better not to, since VSCode already runs its own TS Server. Running \", _jsx(_components.code, {\n        children: \"tsc\"\n      }), \" on the development server creates a duplicate TS Server.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"In case you'd like to check errors project-wide:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"you may still run \", _jsx(_components.code, {\n          children: \"tsc -w\"\n        })]\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"or use a VS Code Task: F1 > Run Build Task > tsc - watch\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Since type checking and building are now separate tasks, you may run them on \", _jsx(_components.em, {\n        children: \"parallel\"\n      }), \" on the CI.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Performance feelings\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Build time went to around 25 seconds down from 3 min (could be lower if I hadn't disabled SMT on my processor); While Webpack uses only a single core during most of the build, Vite displays some average activity on all cores.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Peak memory usage went to 1,2GB, down from ~3GB.\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"The development server starts right away, since it actually didn't compile anything. Pages are compiled as you load them (similar to what happens on Next.js). The development mode may not feel THAT fast on a first page load, since every dependency is served individually. If you look at the requests pane, you can see an enormous number of files being served;\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Nonetheless, it is orders faster than Webpacks 3-minute build-of-everything;\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Only the files required by a specific page are compiled and served;\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"This also means that when performing HMR, only the changed files are re-served. HMR feels more responsive;\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"This may also mean that once the first load is done, the browser may leverage caching of individual files on its side;\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"On the production mode, the files are bundled more like it happens on other traditional tools. Development and production builds are considerably different from each other. The differences are explained right on the \", _jsx(_components.a, {\n          href: \"https://vitejs.dev/guide/why.html\",\n          children: \"first page of the docs\"\n        }), \".\"]\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"wikiLinks":[{"start":38,"end":52,"display":"Tag: React","srclink":"Tag: React","actualLink":"0000-00-tag-react","isImage":false}],"title":"Post-review: Migrating CRA to Vite","backlinks":[]}},"__N_SSG":true}