{"pageProps":{"articlesDetail":{"year":"2022","month":"08","folder":"../md/2022-08-blog-wikilinks","slug":"2022-08-blog-wikilinks","mdxSource":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    a: \"a\",\n    h2: \"h2\",\n    ul: \"ul\",\n    li: \"li\",\n    h3: \"h3\",\n    em: \"em\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      children: \"Atualização do blog: Wikilinks e Tags\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"0000-00-tag-blog-release-notes\",\n        children: \"Tag: Blog release notes\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Sobre Wikilinks\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://en.wikipedia.org/wiki/Help:Link\",\n          children: \"Documentação de Links da Wikipédia\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Escrever links com menos fricção, e usando linguagem natural (usando o próprio título da referência);\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Um wikilink pode referenciar uma página que ainda não existe, indicando uma intenção de futuramente escrever um novo artigo expandindo sobre um assunto;\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Implementação\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Substituição ingênua de strings;\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Implementar lógica que relacione um texto de wikilink com um link acessível;\", \"\\n\", _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"Usada busca fuzzy sobre títulos de artigos, de modo a permitir uma \\\"margem de erro\\\" na definição de links (escrever um conteúdo parecido com um título de artigo basta);\"\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Posteriormente notado que ao invés de substituir strings não mão, talvez teria sido melhor usar um \", _jsx(_components.a, {\n          href: \"https://github.com/landakram/remark-wiki-link\",\n          children: \"plugin\"\n        }), \" para o \", _jsx(_components.em, {\n          children: \"remark\"\n        }), \", o parser de markdown usado no projeto;\", \"\\n\", _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"O plugin também permite implementação de \\\"resolução de links\\\" personalizada, além de uma implementação mais completa de links (como o uso de cores diferentes pra links existentes ou não);\"\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"TODO\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"Prosseguindo a implementação de wikilinks, seguirá a implementação de \", _jsx(_components.em, {\n          children: \"referências inversas\"\n        }), \" (backlinks), que nos permite caminhar pelo \", _jsx(_components.em, {\n          children: \"grafo de informações\"\n        }), \" pelo caminho inverso;\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Poderemos também construír uma lista de \", _jsx(_components.em, {\n          children: \"links órfãos\"\n        }), \", sinalizando assuntos pendentes pra escrever;\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Tags\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"Inspirado no que pode ser feito no Notion, uma tag pode ser definida como uma mera referência a uma página existente; Para definir uma tag, basta criar um página, a exemplo de \", _jsx(_components.a, {\n          href: \"0000-00-tag-blog-release-notes\",\n          children: \"Tag: Blog release notes\"\n        }), \" e \", _jsx(_components.a, {\n          href: \"0000-00-tag-notas-permanentes\",\n          children: \"Tag: Notas permanentes\"\n        }), \";\"]\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"A listagem de itens marcados por uma tag é realizada a partir de backlinks;\"\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"title":"Atualização do blog: Wikilinks e Tags"}},"__N_SSG":true}